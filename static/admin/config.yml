# This file is used to configure the Decap CMS admin interface.
# For more info see: https://decapcms.org/docs/hugo/ 
# This is the configuration for Decap CMS.
# It tells the CMS how to connect to your Git repository
# and how to structure the content editing interface based on your files.

backend:
  # Using 'git-gateway' name tells Decap CMS to use
  # Netlify's built-in Git Gateway service for authentication and Git operations.
  # This requires enabling Netlify Identity and Git Gateway in your Netlify dashboard.
  name: git-gateway
  # The branch that the CMS will commit changes to.
  # This should match your Netlify deployment branch.
  branch: deploy-netlify

# The URL of your live site. Decap CMS needs this to interact correctly
# with Netlify Identity and Git Gateway on your deployed site.
site_url: https://dandylyons.net

# The slug of your GitHub repository (owner/repo).
repo: DandyLyons/DandyLyons.github.io

# Set to true for local development using the Decap CMS proxy server.
# Change to false or remove for production after deploying to Netlify.
local_backend: true

# Optional: Configure media and public folder paths for file uploads.
# The 'media_folder' is relative to your site root (where /static is).
# The 'public_folder' is the path used in the published site content.
media_folder: "static/uploads" # e.g., /static/uploads/image.jpg will be stored here
public_folder: "/uploads"      # e.g., The CMS will insert /uploads/image.jpg in markdown

# The 'collections' define the different types of content you can manage.
# These map to your site's sections (posts, thoughts, essays).
collections:
  # -- Posts Collection --
  - name: "posts" # Internal identifier for this collection
    label: "Posts" # Label shown in the CMS UI sidebar
    folder: "content/en-gb/posts" # The directory where your post files are located
    create: true # Allows users to create new files in this folder via the CMS
    # Slug pattern for the filename. The CMS will generate a filename based on the title.
    # Your Hugo archetype will handle the front matter slug generation.
    slug: "{{slug}}"
    path: "{{slug}}/index" # Path to the file, using the slug for the filename.
    preview_path: "posts/{{slug}}" # Path to preview the post in Decap CMS, relative to the site root.
    media_folder: "{{slug}}" # Media folder for this post, relative to the post folder.
    identifier_field: "title" # Use the 'title' field for a human-readable name in the CMS list view
    format: "frontmatter" # Indicates that content uses front matter (Decap CMS detects YAML/TOML automatically)
    fields: # Define the fields that appear in the CMS editor for each post
      - {label: "Title", name: "title", widget: "string", required: true}
      - {label: "Publish Date", name: "date", widget: "datetime", required: true}
      - {label: "Draft", name: "draft", widget: "boolean", default: true}
      # Slug is optional in CMS; your archetype generates it if not provided.
      - {label: "Slug", name: "slug", widget: "string", required: false}
      - {label: "Description", name: "description", widget: "text", required: false}
      - {label: "Author", name: "author", widget: "string", default: "Daniel Lyons"}
      # Widgets for lists (tags, categories, techstack, images, topics)
      - {label: "Tags", name: "tags", widget: "list", field: {label: "Tag", name: "tag", widget: "string"}, required: false, default: ["programming"]}
      - {label: "Categories", name: "categories", widget: "list", field: {label: "Category", name: "category", widget: "string"}, required: false}
      - {label: "Tech Stack", name: "techstack", widget: "list", field: {label: "Technology", name: "technology", widget: "string"}, required: false} # Matches your custom techstack field
      - {label: "Images (for social preview)", name: "images", widget: "list", field: {label: "Image Path", name: "image", widget: "image"}, required: false} # For the 'images' array used in social previews
      - {label: "Topics (Taxonomy)", name: "topics", widget: "list", field: {label: "Topic", name: "topic", widget: "string"}, required: false} # Matches your 'topics' taxonomy
      # The main content of the post (Markdown editor)
      - {label: "Body", name: "body", widget: "markdown", required: true}

  # -- Thoughts Collection --
  - name: "thoughts"
    label: "Thoughts"
    folder: "content/en-gb/thoughts"
    create: true
    slug: "{{slug}}" # Filename slug
    path: "{{slug}}/index" # Path to the file, using the slug for the filename.
    preview_path: "thoughts/{{slug}}" # Path to preview the post in Decap CMS, relative to the site root.
    media_folder: "{{slug}}" # Media folder for this post, relative to the post folder.
    identifier_field: "title"
    format: "frontmatter"
    fields:
      - {label: "Title", name: "title", widget: "string", required: true}
      - {label: "Publish Date", name: "date", widget: "datetime", required: true}
      - {label: "Draft", name: "draft", widget: "boolean", default: true}
      - {label: "Slug", name: "slug", widget: "string", required: false} # Optional, archetype generates if not set
      - {label: "Description", name: "description", widget: "text", required: false}
      - {label: "Tags", name: "tags", widget: "list", field: {label: "Tag", name: "tag", widget: "string"}, required: false, default: ["thoughts"]}
      # Aliases - Decap CMS can't replicate the automatic alias generation from your archetype.
      # Users would need to manually add aliases here if needed.
      - {label: "Aliases", name: "aliases", widget: "list", field: {label: "Alias", name: "alias", widget: "string"}, required: false}
      - {label: "Body", name: "body", widget: "markdown", required: true}

  # -- Essays Collection --
  - name: "essays"
    label: "Essays"
    folder: "content/en-gb/essays"
    create: true
    slug: "{{slug}}" # Filename slug
    path: "{{slug}}/index" # Path to the file, using the slug for the filename.
    preview_path: "essays/{{slug}}" # Path to preview the post in Decap CMS, relative to the site root.
    media_folder: "{{slug}}" # Media folder for this post, relative to the post folder.
    identifier_field: "title"
    format: "frontmatter"
    fields:
      - {label: "Title", name: "title", widget: "string", required: true}
      - {label: "Publish Date", name: "date", widget: "datetime", required: true}
      - {label: "Draft", name: "draft", widget: "boolean", default: true}
      - {label: "Slug", name: "slug", widget: "string", required: false} # Optional, archetype generates if not set
      - {label: "Tags", name: "tags", widget: "list", field: {label: "Tag", name: "tag", widget: "string"}, required: false, default: ["essays"]}
      - {label: "Body", name: "body", widget: "markdown", required: true}

  # -- Projects Collection (Placeholder) --
  # Uncomment and define fields once you have finalized the structure
  # and archetype for your /projects section.
  # - name: "projects"
  #   label: "Projects"
  #   folder: "content/en-gb/projects"
  #   create: true
  #   slug: "{{slug}}"
  #   identifier_field: "title"
  #   format: "frontmatter"
  #   fields:
  #     # Define fields based on your project front matter requirements
  #     - {label: "Title", name: "title", widget: "string"}
  #     # ... add other project-specific fields here ...
  #     - {label: "Body", name: "body", widget: "markdown"}

# Optional: Enable Editorial Workflow.
# This changes the CMS behavior to create drafts and require publishing,
# often implemented via pull requests in the Git repository.
publish_mode: editorial_workflow
